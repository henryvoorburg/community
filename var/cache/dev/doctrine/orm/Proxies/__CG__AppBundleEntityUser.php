<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \AppBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'firstName', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'lastName', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'plainPassword', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'randomAuth', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'gender', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'isAdmin', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'active', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'id', 'notifications', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'posts', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'groups', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'comments', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'commentRs', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'photos', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'photoCs', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'discussions', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'likes', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'articlesM', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'articles'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'firstName', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'lastName', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'plainPassword', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'randomAuth', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'gender', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'isAdmin', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'active', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'id', 'notifications', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'posts', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'groups', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'comments', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'commentRs', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'photos', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'photoCs', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'discussions', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'likes', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'articlesM', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'articles'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setGender($gender)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', [$gender]);

        return parent::setGender($gender);
    }

    /**
     * {@inheritDoc}
     */
    public function getGender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', []);

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAdmin($isAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAdmin', [$isAdmin]);

        return parent::setIsAdmin($isAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAdmin', []);

        return parent::getIsAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addPost(\AppBundle\Entity\Post $post)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPost', [$post]);

        return parent::addPost($post);
    }

    /**
     * {@inheritDoc}
     */
    public function removePost(\AppBundle\Entity\Post $post)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePost', [$post]);

        return parent::removePost($post);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosts', []);

        return parent::getPosts();
    }

    /**
     * {@inheritDoc}
     */
    public function addGroup(\AppBundle\Entity\Group $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroup', [$group]);

        return parent::addGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroup(\AppBundle\Entity\Group $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroup', [$group]);

        return parent::removeGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', []);

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\AppBundle\Entity\Comment $comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\AppBundle\Entity\Comment $comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', [$comment]);

        return parent::removeComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addCommentR(\AppBundle\Entity\CommentR $commentR)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCommentR', [$commentR]);

        return parent::addCommentR($commentR);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCommentR(\AppBundle\Entity\CommentR $commentR)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCommentR', [$commentR]);

        return parent::removeCommentR($commentR);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentRs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentRs', []);

        return parent::getCommentRs();
    }

    /**
     * {@inheritDoc}
     */
    public function addPhoto(\AppBundle\Entity\Photo $photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhoto', [$photo]);

        return parent::addPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhoto(\AppBundle\Entity\Photo $photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhoto', [$photo]);

        return parent::removePhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotos', []);

        return parent::getPhotos();
    }

    /**
     * {@inheritDoc}
     */
    public function addPhotoC(\AppBundle\Entity\PhotoC $photoC)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhotoC', [$photoC]);

        return parent::addPhotoC($photoC);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhotoC(\AppBundle\Entity\PhotoC $photoC)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhotoC', [$photoC]);

        return parent::removePhotoC($photoC);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotoCs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotoCs', []);

        return parent::getPhotoCs();
    }

    /**
     * {@inheritDoc}
     */
    public function addDiscussion(\AppBundle\Entity\Discussion $discussion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDiscussion', [$discussion]);

        return parent::addDiscussion($discussion);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDiscussion(\AppBundle\Entity\Discussion $discussion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDiscussion', [$discussion]);

        return parent::removeDiscussion($discussion);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscussions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscussions', []);

        return parent::getDiscussions();
    }

    /**
     * {@inheritDoc}
     */
    public function addArticlesM(\AppBundle\Entity\ArticleM $articlesM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArticlesM', [$articlesM]);

        return parent::addArticlesM($articlesM);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArticlesM(\AppBundle\Entity\ArticleM $articlesM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArticlesM', [$articlesM]);

        return parent::removeArticlesM($articlesM);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticlesM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticlesM', []);

        return parent::getArticlesM();
    }

    /**
     * {@inheritDoc}
     */
    public function addArticle(\AppBundle\Entity\Article $article)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArticle', [$article]);

        return parent::addArticle($article);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArticle(\AppBundle\Entity\Article $article)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArticle', [$article]);

        return parent::removeArticle($article);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getArticles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticles', []);

        return parent::getArticles();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', []);

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', [$password]);

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setRandomAuth($randomAuth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRandomAuth', [$randomAuth]);

        return parent::setRandomAuth($randomAuth);
    }

    /**
     * {@inheritDoc}
     */
    public function getRandomAuth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRandomAuth', []);

        return parent::getRandomAuth();
    }

    /**
     * {@inheritDoc}
     */
    public function addLike(\AppBundle\Entity\ArticleL $like)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLike', [$like]);

        return parent::addLike($like);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLike(\AppBundle\Entity\ArticleL $like)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLike', [$like]);

        return parent::removeLike($like);
    }

    /**
     * {@inheritDoc}
     */
    public function getLikes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLikes', []);

        return parent::getLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function getNotifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotifications', []);

        return parent::getNotifications();
    }

    /**
     * {@inheritDoc}
     */
    public function addNotification($notification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNotification', [$notification]);

        return parent::addNotification($notification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNotification($notification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNotification', [$notification]);

        return parent::removeNotification($notification);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifier', []);

        return parent::getIdentifier();
    }

}
